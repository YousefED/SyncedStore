"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[823],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,b=m["".concat(l,".").concat(u)]||m[u]||s[u]||a;return n?o.createElement(b,i(i({ref:t},d),{},{components:n})):o.createElement(b,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:3,sidebar_label:"MobX integration"},i="MobX integration (advanced)",c={unversionedId:"advanced/mobx",id:"advanced/mobx",title:"MobX integration (advanced)",description:"This section is intended for developers who are already using MobX in their application and don't want to use the built-in React, Vue or Reactive bindings.",source:"@site/docs/advanced/mobx.md",sourceDirName:"advanced",slug:"/advanced/mobx",permalink:"/docs/advanced/mobx",draft:!1,editUrl:"https://github.com/yousefed/SyncedStore/edit/main/docs/docs/advanced/mobx.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"MobX integration"},sidebar:"tutorialSidebar",previous:{title:"Boxed values",permalink:"/docs/advanced/boxed"},next:{title:"Yjs integration",permalink:"/docs/advanced/yjs"}},l={},p=[{value:"Example",id:"example",level:2}],d={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mobx-integration-advanced"},"MobX integration (advanced)"),(0,r.kt)("admonition",{title:"Only for MobX users",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This section is intended for developers who are already using MobX in their application and don't want to use the built-in React, Vue or ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/yousefED/reactive"},"Reactive")," bindings.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"SyncedStore")," works seamlessly together with the ",(0,r.kt)("a",{parentName:"p",href:"https://mobx.js.org"},"MobX FRP library"),". To enable this, call ",(0,r.kt)("inlineCode",{parentName:"p"},"enableMobxBindings")," once, for example when setting up your store."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import * as mobx from "mobx";\nimport { enableMobxBindings } from "@syncedstore/core";\n\nenableMobxBindings(mobx);\n')),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"You can now use mobx functionality such as reactions, autorun, etc. You can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"mobx-react")," to combine ",(0,r.kt)("em",{parentName:"p"},"SyncedStore"),", ",(0,r.kt)("em",{parentName:"p"},"mobx"),", and ",(0,r.kt)("em",{parentName:"p"},"React"),"."),(0,r.kt)("p",null,"Compared to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/react"},"default React example"),", we now wrap the component using ",(0,r.kt)("inlineCode",{parentName:"p"},"observer"),", and we don't need the ",(0,r.kt)("inlineCode",{parentName:"p"},"useSyncedStore")," hook anymore."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"live",live:!0},'import React from "react";\nimport { store } from "./store";\nimport { observer } from "mobx-react-lite";\nimport * as mobx from "mobx";\nimport { enableMobxBindings } from "@syncedstore/core";\n\n// enable mobx bindings\nenableMobxBindings(mobx);\n\n// use the observer pattern from mobx-react-lite.\nexport const App = observer(() => {\n  return (\n    <div>\n      <p>Todo items:</p>\n      <ul>\n        {store.todos.map((todo, i) => {\n          return (\n            <li key={i} style={{ textDecoration: todo.completed ? "line-through" : "" }}>\n              <label>\n                <input type="checkbox" checked={todo.completed} onClick={() => (todo.completed = !todo.completed)} />\n                {todo.title}\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n      <input\n        placeholder="Enter a todo item and hit enter"\n        type="text"\n        onKeyPress={(event) => {\n          if (event.key === "Enter") {\n            const target = event.target as HTMLInputElement;\n            // Add a todo item using the text added in the textfield\n            store.todos.push({ completed: false, title: target.value });\n            target.value = "";\n          }\n        }}\n        style={{ width: "200px", maxWidth: "100%" }}\n      />\n    </div>\n  );\n});\n\nexport default App;\n')))}s.isMDXComponent=!0}}]);